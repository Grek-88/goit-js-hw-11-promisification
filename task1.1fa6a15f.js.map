{"version":3,"sources":["js/task1.js"],"names":["delay","ms","Promise","resolve","setTimeout","logger","time","console","log","then"],"mappings":"AAAA,IAAMA,KAAK,GAAG,SAARA,KAAQ,CAAAC,EAAE,EAAI;AAChB,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAa;AAC5BC,IAAAA,UAAU,CAAC,YAAM;AACbD,MAAAA,OAAO,CAACF,EAAD,CAAP;AACH,KAFS,EAEPA,EAFO,CAAV;AAGL,GAJQ,CAAP;AAKH,CAND;;AAQA,IAAMI,MAAM,GAAG,SAATA,MAAS,CAAAC,IAAI;AAAA,SAAIC,OAAO,CAACC,GAAR,0BAA8BF,IAA9B,QAAJ;AAAA,CAAnB,EAEA;;;AACAN,KAAK,CAAC,IAAD,CAAL,CAAYS,IAAZ,CAAiBJ,MAAjB,GAA0B;;AAC1BL,KAAK,CAAC,IAAD,CAAL,CAAYS,IAAZ,CAAiBJ,MAAjB,GAA0B;;AAC1BL,KAAK,CAAC,IAAD,CAAL,CAAYS,IAAZ,CAAiBJ,MAAjB,GAA0B","file":"task1.1fa6a15f.js","sourceRoot":"..\\src","sourcesContent":["const delay = ms => {\r\n    return new Promise((resolve) => {\r\n        setTimeout(() => {\r\n            resolve(ms);\r\n        }, ms)\r\n  })\r\n};\r\n\r\nconst logger = time => console.log(`Resolved after ${time}ms`);\r\n\r\n// Вызовы функции для проверки\r\ndelay(2000).then(logger); // Resolved after 2000ms\r\ndelay(1000).then(logger); // Resolved after 1000ms\r\ndelay(1500).then(logger); // Resolved after 1500ms"]}
{"version":3,"sources":["js/task1.js","js/task2.js","js/task3.js","index.js"],"names":["delay","ms","Promise","resolve","setTimeout","logger","time","console","log","then","users","name","active","toggleUserState","allUsers","userName","updatedUsers","map","user","table","randomIntegerFromInterval","min","max","Math","floor","random","makeTransaction","transaction","reject","canProcess","id","logSuccess","logError","warn","amount","catch"],"mappings":"AAAA,AEAA,IFAMA,AEAAoB,KFAK,GAAG,SAARpB,KAAQ,CAAAC,EAAE,AEAe,EFAX,CEAc,SAA5BmB,yBAA4B,CAACC,GAAD,EAAMC,GAAN,EAAc;AFC5C,AEAF,SFAS,AEAFC,IFAMrB,AEAF,CAACsB,KAAL,CFAE,AEASD,CFAG,GEAC,CAACE,MFADtB,AEAJ,MAAiBmB,CFAd,EAAa,AEAI,GAAGD,GAAN,GAAY,CAA7B,IAAkCA,GAA7C,CAAP;ACDF,AHEQjB,AEAP,CAFD,GFEQA,UAAU,CAAC,YAAM;AACbD,MAAAA,OAAO,CAACF,EAAD,CAAP;AGFZ,AHGS,AEAT,IAAMyB,CFFY,EAEPzB,EAFO,CAAV,SEEa,GAAG,SAAlByB,eAAkB,CAACC,WAAD,EAAiB;AFCtC,AEAC,GFJO,CAAP,EEIM3B,KAAK,GAAGoB,yBAAyB,CAAC,GAAD,EAAM,GAAN,CAAvC;ACHJ,AHIC,ACND,ACQI,CFRJ,GCAMV,KAAK,ACQA,GDRG,CACZ,ACOaR,OAAJ,CAAY,UAACC,OAAD,EAAUyB,MAAV,EAAqB;ADPxCjB,ACQMP,EDRNO,ECQMP,EDRF,EAAE,MCQU,CDRlB,ACQmB,YAAM;AFD3B,ACPmBQ,ACSf,EDTeA,EDObP,ICPmB,EDOb,ACPe,ACSjBwB,GFFK,OEEK,EFFdxB,CEEiBkB,IAAI,CFFZ,AEEaE,CFFbnB,IAAI,CEEI,KAAgB,GAAnC;AFFe,ACPjB,CADY,EAEZ,MDMqBC,OAAO,CAACC,GAAR,0BAA8BF,IAA9B,QAAJ;AAAA,ACNfK,ACUA,CFJJ,CCNIA,CDQJ,GCRQ,EAAE,ECUFkB,IDVN,MCUE,EAAgB;ADVFjB,ACWVT,EDXUS,MAAM,ACWhBT,EDXkB,KCWX,CAAC;ADXd,ACWgB2B,CDbJ,EAGZ,OCUgBA,EAAE,EAAEH,WAAW,CAACG,EAAlB;AFFhB9B,ACRIW,ACUkCL,EDVlCK,GDQC,CAAC,ACRE,EAAE,EDQL,AEEiCL,CFFtC,CAAYG,ECRV,ACUwC,EFF1C,AEE4CT,CFF3BK,MAAjB,GAA0B;ACRRO,ACUF,EDVEA,MAAM,CCUT,CDVW,ACUlB;AFDRZ,ACTE,ACWG,CDdS,EAIZ,EDQG,CAAC,CEAF,GFAC,CAAL,CAAYS,CEED,GFFX,CAAiBJ,MAAjB,GAA0B;ACRtBM,ACWIiB,EDXJjB,IAAI,EAAE,ACWFiB,KDXN,CCWY,CAACD,WAAW,CAACG,EAAb,CAAN;AFFR9B,ACTiBY,ACYZ,EDZYA,GDSZ,CAAC,ECTiB,EDSlB,ACToB,CDSzB,CAAYH,IAAZ,CAAiBJ,MAAjB,GAA0B;ACTxB,ACaC,CDjBW,CAAd,GCSoB,EAQfL,KARe,CAAV;AASL,GAVM,CAAP;ADDJ,ACYC,CAfD,GDGMa,eAAe,GAAG,SAAlBA,eAAkB,CAACC,QAAD,EAAWC,QAAX,EAAwB;AAC9C,MAAMC,YAAY,GAAGF,QAAQ,CAACG,GAAT,CAAa,UAAAC,IAAI;AAAA,ACaxC,IAAMa,ODZFb,GCYY,CDZR,CAACP,CCYU,GDZf,KAAcI,CCYZgB,ODZF,GCYe,OAAkB,yBDZHb,IAA9B;AAAoCN,ACYH,MDZGA,ACYlBkB,EAAe,IDZS,EAAE,CAACZ,CCY3BY,EAAe,CDZgB,CAAClB;AAAlD,ACYiC,MAAXN,GDZuCY,CCY5B,GDbG,KCadZ,IAAW;ADbG,ACctCC,EAAAA,CDdqB,CAArB,KCcO,CAACC,GAAR,uBAA2BsB,EAA3B,2BAA8CxB,IAA9C;ADVE,ACWH,CAFD,QDTW,IAAIJ,OAAJ,CAAY,UAACC,OAAD,EAAa;AAC5BA,IAAAA,OAAO,CAACa,YAAD,CAAP;AACH,ACWL,GDbW,CAAP,ACaEgB,QAAQ,GAAG,SAAXA,QAAW,CAAAF,EAAE,EAAI;ADVtB,ACWCvB,CDnBF,CCmBEA,OAAO,CAAC0B,IAAR,wCAA6CH,EAA7C;AACD,CAFD;ADRA,IAAMzB,MAAM,GAAG,SAATA,MAAS,CAAAW,YAAY;AAAA,ACa3BU,SDb+BnB,MCahB,CDbuB,ACatB,CDbuBY,KAAR,CAAcH,YAAd,CAAJ;AAAA,ACaTc,CDblB,CCakBA,EAAE,EAAE,EAAN;AAAUI,EAAAA,MAAM,EAAE;ADXlCrB,ACWgB,CAAD,CAAf,CACGJ,IADH,CACQsB,ODZO,CAACrB,ECWhB,EAEGyB,CDbY,EAAQ,ECWvB,CAESH,IDbM,CAAf,CAAgCvB,ECWhC,EDXA,CAAqCJ,MAArC;AACAQ,ACcAa,eDde,ACcA,CDdChB,ACcA,KDdD,EAAQ,KAAR,CAAf,CAA8BD,IAA9B,CAAmCJ,MAAnC;ACckByB,EAAAA,EAAE,EAAE,EAAN;AAAUI,EAAAA,MAAM,EAAE;AAAlB,CAAD,CAAf,CACGzB,IADH,CACQsB,UADR,EAEGI,KAFH,CAESH,QAFT;AAIAN,eAAe,CAAC;AAAEI,EAAAA,EAAE,EAAE,EAAN;AAAUI,EAAAA,MAAM,EAAE;AAAlB,CAAD,CAAf,CACGzB,IADH,CACQsB,UADR,EAEGI,KAFH,CAESH,QAFT;AAIAN,eAAe,CAAC;AAAEI,EAAAA,EAAE,EAAE,EAAN;AAAUI,EAAAA,MAAM,EAAE;AAAlB,CAAD,CAAf,CACGzB,IADH,CACQsB,UADR,EAEGI,KAFH,CAESH,QAFT","file":"src.e31bb0bc.js","sourceRoot":"..\\src","sourcesContent":["const delay = ms => {\r\n    return new Promise((resolve) => {\r\n        setTimeout(() => {\r\n            resolve(ms);\r\n        }, ms)\r\n  })\r\n};\r\n\r\nconst logger = time => console.log(`Resolved after ${time}ms`);\r\n\r\n// Вызовы функции для проверки\r\ndelay(2000).then(logger); // Resolved after 2000ms\r\ndelay(1000).then(logger); // Resolved after 1000ms\r\ndelay(1500).then(logger); // Resolved after 1500ms","const users = [\r\n  { name: 'Mango', active: true },\r\n  { name: 'Poly', active: false },\r\n  { name: 'Ajax', active: true },\r\n  { name: 'Lux', active: false },\r\n];\r\n\r\nconst toggleUserState = (allUsers, userName) => {\r\n  const updatedUsers = allUsers.map(user =>\r\n    user.name === userName ? { ...user, active: !user.active } : user,\r\n    );\r\n    \r\n    return new Promise((resolve) => {\r\n        resolve(updatedUsers);\r\n    })\r\n};\r\n\r\nconst logger = updatedUsers => console.table(updatedUsers);\r\n\r\ntoggleUserState(users, 'Mango').then(logger);\r\ntoggleUserState(users, 'Lux').then(logger);","const randomIntegerFromInterval = (min, max) => {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n};\r\n\r\nconst makeTransaction = (transaction) => {\r\n    const delay = randomIntegerFromInterval(200, 500);\r\n    \r\n\r\n    return new Promise((resolve, reject) => {\r\n          setTimeout(() => {\r\n    const canProcess = Math.random() > 0.3;\r\n\r\n    if (canProcess) {\r\n        resolve({ id: transaction.id, time: delay });\r\n    } else {\r\n        reject(transaction.id);\r\n    }\r\n  }, delay);\r\n    })\r\n};\r\n\r\nconst logSuccess = ({ id, time }) => {\r\n  console.log(`Transaction ${id} processed in ${time} ms`);\r\n};\r\n\r\nconst logError = id => {\r\n  console.warn(`Error processing transaction ${id}. Please try again later.`);\r\n};\r\n\r\n\r\nmakeTransaction({ id: 70, amount: 150 })\r\n  .then(logSuccess)\r\n  .catch(logError);\r\n\r\nmakeTransaction({ id: 71, amount: 230 })\r\n  .then(logSuccess)\r\n  .catch(logError);\r\n\r\nmakeTransaction({ id: 72, amount: 75 })\r\n  .then(logSuccess)\r\n  .catch(logError);\r\n\r\nmakeTransaction({ id: 73, amount: 100 })\r\n  .then(logSuccess)\r\n  .catch(logError);","import './js/task1.js';\r\nimport './js/task2.js';\r\nimport './js/task3.js';"]}